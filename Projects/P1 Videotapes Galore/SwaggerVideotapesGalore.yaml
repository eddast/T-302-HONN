swagger: '2.0'
info:
  description: >-
    Simple user and video tape storing and management system. Has functionality
    to 'borrow' video tapes to users via relations between the two tapes. Has
    additional functionality of managing and storing user rating of video tapes
    and user recommendations of video tapes. API designed by Edda Steinunn
    Rúnarsdóttir for the assigment Project #1 in the course T-302-HÖNN for
    Reykjavik University.
  version: 1.0.0
  title: Videotapes Galore API
host: '127.0.0.1:8080'
basePath: /api/v1
tags:
  - name: users
    description: Access to users in system
  - name: tapes
    description: Access to video tapes in system
  - name: borrows
    description: Access to borrow records in system
  - name: reports
    description: Access to reading borrow reports
  - name: ratings
    description: Access to video tape ratings in system
  - name: recommendations
    description: Access to real-time video tape recommendations
schemes:
  - http
paths:
  /users:
    get:
      tags:
        - users
      summary: Gets list of all users
      operationId: getUsers
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
    post:
      tags:
        - users
      summary: Add a new user to system
      description: ''
      operationId: addUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: User object to be added to system
          required: true
          schema:
            $ref: '#/definitions/UserInput'
      responses:
        '201':
          description: Created
        '405':
          description: Invalid input
  '/users/{id}':
    get:
      tags:
        - users
      summary: Gets specific user by id
      operationId: getUser
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id of user to get
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        '400':
          description: invalid id supplied
        '404':
          description: user not found
    delete:
      tags:
        - users
      summary: Deletes user by id
      description: Deletes user by id
      operationId: deleteUserById
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id of user to delete
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
        '400':
          description: invalid id supplied
        '404':
          description: user not found
    put:
      tags:
        - users
      summary: Update user by ID
      description: ''
      operationId: updateUserById
      consumes:
        - application/json
      parameters:
        - name: id
          in: path
          description: id of user to delete
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: user object to update
          required: true
          schema:
            $ref: '#/definitions/UserInput'
      responses:
        '200':
          description: successful operation
        '400':
          description: invalid id supplied
        '404':
          description: user not found
  '/users/{id}/borrow':
    get:
      tags:
        - users
      summary: Gets all borrow records for specific borrower by id
      description: Gets all borrow records for specific borrower by id
      operationId: getBorrowsByBorrowerId
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Id of user that has borrowed video tapes
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/BorrowRecord'
        '400':
          description: invalid id supplied for borrower
        '404':
          description: borrower not found by id
    post:
      tags:
        - users
      summary: >-
        Add a new borrow record for a given tape to borrower by borrower id to
        system
      description: >-
        Add a new borrow record for a given tape to borrower by borrower id to
        system
      operationId: addBorrowByBorrowerId
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Id of user to add a borrow record for given tap
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: New borrow record to register for borrower
          required: true
          schema:
            $ref: '#/definitions/BorrowRecordInput'
      responses:
        '200':
          description: successful operation
        '400':
          description: invalid id supplied for borrower
        '404':
          description: borrower not found by id
  /tapes:
    get:
      tags:
        - tapes
      summary: Gets list of all video tapes
      operationId: getTapes
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Tape'
    post:
      tags:
        - tapes
      summary: Add a new video tape to system
      description: ''
      operationId: addTape
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Tape object to be added to system
          required: true
          schema:
            $ref: '#/definitions/TapeInput'
      responses:
        '201':
          description: Created
        '405':
          description: Invalid input
  '/tapes/{id}':
    get:
      tags:
        - tapes
      summary: Gets specific video tape by id
      operationId: getTape
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id of video tape to get
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Tape'
        '400':
          description: invalid id supplied
        '404':
          description: video tape not found
    delete:
      tags:
        - tapes
      summary: Deletes video tape by id
      description: Deletes video tape by id
      operationId: deleteTapeById
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id of video tape to delete
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
        '400':
          description: invalid id supplied
        '404':
          description: video tape not found
    put:
      tags:
        - tapes
      summary: Update video tape by ID
      description: ''
      operationId: updateTapeById
      consumes:
        - application/json
      parameters:
        - name: id
          in: path
          description: id of video tape to delete
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: video tape object to update
          required: true
          schema:
            $ref: '#/definitions/TapeInput'
      responses:
        '200':
          description: successful operation
        '400':
          description: invalid id supplied
        '404':
          description: video tape not found
  /borrows:
    get:
      tags:
        - borrows
      summary: Gets list of all borrow records of tapes borrowed to users
      operationId: getBorrows
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/BorrowRecord'
  '/borrows/{recordId}':
    get:
      tags:
        - borrows
      summary: Gets details on a specific borrow record by recordId
      description: Gets details on a specific borrow record by recordId
      operationId: getBorrowById
      produces:
        - application/json
      parameters:
        - name: recordId
          in: path
          description: Id of borrow record
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/BorrowRecord'
        '400':
          description: invalid id supplied for record
        '404':
          description: record not found by id
    delete:
      tags:
        - borrows
      summary: Deletes borrow record for a borrower by id for a tape by id
      description: Deletes borrow record for a borrower by id for a tape by id
      operationId: deleteBorrow
      produces:
        - application/json
      parameters:
        - name: recordId
          in: path
          description: Id of borrow record
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
        '400':
          description: invalid id supplied for record
        '404':
          description: record not found by id
    put:
      tags:
        - borrows
      summary: Update borrow record for a video tape borrowed
      description: ''
      operationId: updateBorrowRecord
      consumes:
        - application/json
      parameters:
        - name: recordId
          in: path
          description: Id of borrow record
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: Borrow record to update for borrower
          required: true
          schema:
            $ref: '#/definitions/BorrowRecordEdit'
      responses:
        '200':
          description: successful operation
        '400':
          description: invalid id supplied for record
        '404':
          description: record not found
    patch:
      tags:
        - borrows
      summary: Updates return date for a borrow record
      description: Updates return date for a borrow record
      operationId: updateReturnDate
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: recordId
          in: path
          description: Id of borrow record
          required: true
          type: integer
          format: int64
        - name: body
          in: body
          description: Contains the returnDate that is being updated
          required: true
          schema:
            $ref: '#/definitions/ReturnDate'
      responses:
        '200':
          description: successful operation
        '400':
          description: invalid recordId or returnDate
        '404':
          description: record with id not found
  /reports/borrowed:
    get:
      tags:
        - reports
      summary: Gets list of all borrowed video tapes in system and who has them
      description: >-
        Gets list of all borrowed video tapes in system and who has them, can
        use query parameter to enter date to check borrow records for.
        Otherwise, current Date is used.
      operationId: getBorrowedTapesReport
      produces:
        - application/json
      parameters:
        - name: date
          in: query
          description: >-
            Date (yyyy-MM-dd) that indicates which date to check for which tapes
            are borrowed
          required: false
          type: string
          format: date-time
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/BorrowedTapeDetails'
        '400':
          description: 'invalid date provided, is not returned if no date is passed'
  /reports/borrowers:
    get:
      tags:
        - reports
      summary: Gets list of all users that have borrowed tapes and which tapes
      description: >-
        Gets list of all users that have borrowed tapes and which tapes, can
        use query parameter to enter date to check borrow records for.
        Otherwise, current Date is used.
      operationId: getBorrowersReport
      produces:
        - application/json
      parameters:
        - name: date
          in: query
          description: >-
            Date (yyyy-MM-dd) that indicates which date to check for which tapes
            are borrowed
          required: false
          type: string
          format: date-time
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Borrower'
        '400':
          description: 'invalid date provided, is not returned if no date is passed'
  /reports/late:
    get:
      tags:
        - reports
      summary: >-
        Gets list of all users that have been borrowing tapes from over a
        month ago and which tapes they've borrowed
      description: >-
        Gets list of all users that have been borrowing tapes from over a
        month ago and which tapes they've borrowed, can use query parameter to
        enter date to check borrow records for. Otherwise, current Date is used.
      operationId: getLateBorrowersReport
      produces:
        - application/json
      parameters:
        - name: date
          in: query
          description: >-
            Date (yyyy-MM-dd) that indicates which date to check for which tapes
            are borrowed
          required: false
          type: string
          format: date-time
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Borrower'
        '400':
          description: 'invalid date provided, is not returned if no date is passed'
  '/ratings/{userId}':
    get:
      tags:
        - ratings
      summary: Gets all ratings by given user on tapes
      description: Gets all ratings by given user on tapes
      operationId: getUserRatings
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          description: Id of user viewing his or her ratings on all video tapes
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Rating'
        '400':
          description: invalid id supplied for user
        '404':
          description: user not found with id
  '/ratings/{userId}/tapes/{tapeId}':
    get:
      tags:
        - ratings
      summary: Gets given user's rating for a specific tape
      description: Gets given user's rating for a specific tape
      operationId: getUserRatingByTapeId
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          description: Id of user viewing his or her rating on video tape
          required: true
          type: integer
          format: int64
        - name: tapeId
          in: path
          description: Id of video tape user is viewing his or her rating on
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/RatingInput'
        '400':
          description: invalid id supplied for video tape or user
        '404':
          description: video tape or user not found
    post:
      tags:
        - ratings
      summary: Add given user's rating for a specific tape
      description: Add given user's rating for a specific tape
      operationId: postUserRatingByTapeId
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          description: Id of user adding his or her rating on video tape
          required: true
          type: integer
          format: int64
        - name: tapeId
          in: path
          description: Id of video tape user is adding his or her rating on
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: Rating of given video tape for user
          required: true
          schema:
            $ref: '#/definitions/RatingInput'
      responses:
        '200':
          description: successful operation
        '400':
          description: invalid id supplied for video tape or user
        '404':
          description: video tape or user not found
    put:
      tags:
        - ratings
      summary: Update given user's rating for a specific tape
      description: Update given user's rating for a specific tape
      operationId: putUserRatingByTapeId
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          description: Id of user updating his or her rating on video tape
          required: true
          type: integer
          format: int64
        - name: tapeId
          in: path
          description: Id of video tape user is updating his or her rating on
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: Rating of given video tape for user
          required: true
          schema:
            $ref: '#/definitions/RatingInput'
      responses:
        '200':
          description: successful operation
        '400':
          description: invalid id supplied for video tape or user
        '404':
          description: user rating not found on video tape
    delete:
      tags:
        - ratings
      summary: Delete given user's rating for a specific tape
      description: Delete given user's rating for a specific tape
      operationId: deleteUserRatingByTapeId
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          description: Id of user deleting his or her rating on video tape
          required: true
          type: integer
          format: int64
        - name: tapeId
          in: path
          description: Id of video tape user is deleting his or her rating on
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
        '400':
          description: invalid id supplied for video tape or user
        '404':
          description: user rating not found on video tape
  '/recommendations/{userId}':
    get:
      tags:
        - recommendations
      summary: Gets real-time recommendation on a video tape for a given user
      description: Gets real-time recommendation on a video tape for a given user
      operationId: getUserRecommendation
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          description: Id of user requesting recommendation on a video tape
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Tape'
        '400':
          description: invalid id supplied for user
        '404':
          description: user not found with id
definitions:
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      address:
        type: string
      email:
        type: string
      telephone:
        type: string
  UserInput:
    type: object
    properties:
      name:
        type: string
      address:
        type: string
      email:
        type: string
      telephone:
        type: string
  Tape:
    type: object
    properties:
      id:
        type: integer
        format: int64
      title:
        type: string
      director:
        type: string
      type:
        type: string
      releaseDate:
        type: string
        format: date-time
      eidr:
        type: string
  TapeInput:
    type: object
    properties:
      title:
        type: string
      director:
        type: string
      type:
        type: string
      releaseDate:
        type: string
        format: date-time
      eidr:
        type: string
  BorrowRecord:
    type: object
    properties:
      id:
        type: integer
        format: int64
      borrowerId:
        type: integer
        format: int64
      tapeId:
        type: integer
        format: int64
      borrowDate:
        type: string
        format: date-time
      returnDate:
        type: string
        format: date-time
  BorrowRecordEdit:
    type: object
    properties:
      tapeId:
        type: integer
        format: int64
      borrowDate:
        type: string
        format: date-time
      returnDate:
        type: string
        format: date-time
  BorrowRecordInput:
    type: object
    properties:
      tapeId:
        type: integer
        format: int64
      borrowDate:
        type: string
        format: date-time
  BorrowedTapeDetails:
    type: object
    properties:
      tape:
        $ref: '#/definitions/Tape'
      borrowerId:
        type: integer
        format: int64
      borrowerName:
        type: string
      borrowDate:
        type: string
        format: date-time
  BorrowedTape:
    type: object
    properties:
      tapeId:
        type: integer
        format: int64
      tapeTitle:
        type: string
      borrowDate:
        type: string
        format: date-time
  Borrower:
    type: object
    properties:
      borrower:
        $ref: '#/definitions/User'
      tapes:
        type: array
        items:
          $ref: '#/definitions/BorrowedTape'
  Rating:
    type: object
    properties:
      userId:
        type: integer
        format: int64
      tapeId:
        type: integer
        format: int64
      rating:
        type: integer
        minimum: 1
        maximum: 5
  RatingInput:
    type: object
    properties:
      rating:
        type: integer
        minimum: 1
        maximum: 5
  ReturnDate:
    type: object
    properties:
      returnDate:
        type: string
        format: date-time
