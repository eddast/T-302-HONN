swagger: '2.0'
info:
  description: >-
    Simple user and video tape storing and management system. Has functionality to 'borrow' video tapes to users via relations between the two tapes. Has additional functionality of managing and storing user rating of video tapes and user recommendations of video tapes. API designed by Edda Steinunn Rúnarsdóttir for the assigment Project #1 in the course T-302-HÖNN for Reykjavik University.
  version: 1.0.0
  title: Videotapes Galore API
host: '127.0.0.1:8080'
basePath: /api/v1
tags:
  - name: friends
    description: Access to friends in system
  - name: tapes
    description: Access to video tapes in system
  - name: borrows
    description: Access to borrow records in system
  - name: reports
    description: Access to reading borrow reports
  - name: ratings
    description: Access to video tape ratings in system
  - name: recommendations
    description: Access to real-time video tape recommendations
schemes:
  - http
paths:
  /friends:
    get:
      tags:
        - friends
      summary: Gets list of all friends
      operationId: getFriends
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Friend'
    post:
      tags:
        - friends
      summary: Add a new friend to system
      description: ''
      operationId: addFriend
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Friend object to be added to system
          required: true
          schema:
            $ref: '#/definitions/FriendInput'
      responses:
        '201':
          description: Created
        '405':
          description: Invalid input
  '/friends/{id}':
    get:
      tags:
        - friends
      summary: Gets specific friend by id
      operationId: getFriend
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id of friend to get
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Friend'
        '400':
          description: invalid id supplied
        '404':
          description: friend not found
    delete:
      tags:
        - friends
      summary: Deletes friend by id
      description: Deletes friend by id
      operationId: deleteFriendById
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id of friend to delete
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
        '400':
          description: invalid id supplied
        '404':
          description: friend not found
    put:
      tags:
        - friends
      summary: Update friend by ID
      description: ''
      operationId: updateGameById
      consumes:
        - application/json
      parameters:
        - name: id
          in: path
          description: id of friend to delete
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: friend object to update
          required: true
          schema:
            $ref: '#/definitions/FriendInput'
      responses:
        '200':
          description: successful operation
        '400':
          description: invalid id supplied
        '404':
          description: friend not found
  /tapes:
    get:
      tags:
        - tapes
      summary: Gets list of all video tapes
      operationId: getTapes
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Tape'
    post:
      tags:
        - tapes
      summary: Add a new video tape to system
      description: ''
      operationId: addTape
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Tape object to be added to system
          required: true
          schema:
            $ref: '#/definitions/TapeInput'
      responses:
        '201':
          description: Created
        '405':
          description: Invalid input
  '/tapes/{id}':
    get:
      tags:
        - tapes
      summary: Gets specific video tape by id
      operationId: getTape
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id of video tape to get
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Tape'
        '400':
          description: invalid id supplied
        '404':
          description: video tape not found
    delete:
      tags:
        - tapes
      summary: Deletes video tape by id
      description: Deletes video tape by id
      operationId: deleteTapeById
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: id of video tape to delete
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
        '400':
          description: invalid id supplied
        '404':
          description: video tape not found
    put:
      tags:
        - tapes
      summary: Update video tape by ID
      description: ''
      operationId: updateTapeById
      consumes:
        - application/json
      parameters:
        - name: id
          in: path
          description: id of video tape to delete
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: video tape object to update
          required: true
          schema:
            $ref: '#/definitions/TapeInput'
      responses:
        '200':
          description: successful operation
        '400':
          description: invalid id supplied
        '404':
          description: video tape not found
  /borrows:
    get:
      tags:
        - borrows
      summary: Gets list of all borrow records of tapes borrowed to friends
      operationId: getBorrows
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/BorrowRecord'
  '/borrows/{borrowerId}':
    get:
      tags:
        - borrows
      summary: Gets all borrow records for specific borrower by id
      description: Gets all borrow records for specific borrower by id
      operationId: getBorrowsByBorrowerId
      produces:
        - application/json
      parameters:
        - name: borrowerId
          in: path
          description: Id of borrower that has borrowed video tapes
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/BorrowRecord'
        '400':
          description: invalid id supplied for borrower
        '404':
          description: borrower not found by id
    post:
      tags:
        - borrows
      summary: Add a new borrow record for a given tape to borrower by borrower id to system
      description: Add a new borrow record for a given tape to borrower by borrower id to system
      operationId: addBorrowByBorrowerId
      produces:
        - application/json
      parameters:
        - name: borrowerId
          in: path
          description: Id of borrower to delete borrow record of for a certain tape
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: New borrow record to register for borrower
          required: true
          schema:
            $ref: '#/definitions/BorrowRecordInput'
      responses:
        '200':
          description: successful operation
        '400':
          description: invalid id supplied for borrower
        '404':
          description: borrower not found by id
  '/borrows/{borrowerId}/tapes/{tapeId}':
    delete:
      tags:
        - borrows
      summary: Deletes borrow record for a borrower by id for a tape by id
      description: Deletes borrow record for a borrower by id for a tape by id
      operationId: deleteBorrow
      produces:
        - application/json
      parameters:
        - name: borrowerId
          in: path
          description: Id of borrower to delete borrow record of for a certain tape
          required: true
          type: integer
          format: int64
        - name: tapeId
          in: path
          description: Id of video tape to delete borrow record of for a certain borrower
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
        '400':
          description: invalid id supplied for borrower or video tape
        '404':
          description: borrower or video tape not found by id
    put:
      tags:
        - borrows
      summary: Update borrow record for a video tape borrowed
      description: ''
      operationId: updateBorrowRecord
      consumes:
        - application/json
      parameters:
        - name: borrowerId
          in: path
          description: Id of borrower to update a borrow record for
          required: true
          type: integer
          format: int64
        - name: tapeId
          in: path
          description: Id of video tape to update a borrow record for
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: Borrow record to update for borrower
          required: true
          schema:
            $ref: '#/definitions/BorrowRecordInput'
      responses:
        '200':
          description: successful operation
        '400':
          description: invalid id supplied for borrower or video tape
        '404':
          description: borrower or video tape not found
  /reports/borrowedTapes:
      get:
        tags:
          - reports
        summary: Gets list of all borrowed video tapes in system and who has them
        description: Gets list of all borrowed video tapes in system and who has them
        operationId: getBorrowedTapesReport
        produces:
          - application/json
        responses:
          '200':
            description: successful operation
            schema:
              type: array
              items:
                $ref: '#/definitions/BorrowedTapeDetails'
  /reports/borrowers:
      get:
        tags:
          - reports
        summary: Gets list of all friends that have borrowed tapes and which tapes
        description: Gets list of all friends that have borrowed tapes and which tapes
        operationId: getBorrowersReport
        produces:
          - application/json
        responses:
          '200':
            description: successful operation
            schema:
              type: array
              items:
                $ref: '#/definitions/Borrower'
  /reports/lateBorrowers:
      get:
        tags:
          - reports
        summary: Gets list of all friends that have been borrowing tapes from over a month ago and which tapes they've borrowed
        description: Gets list of all friends that have been borrowing tapes from over a month ago and which tapes they've borrowed
        operationId: getLateBorrowersReport
        produces:
          - application/json
        responses:
          '200':
            description: successful operation
            schema:
              type: array
              items:
                $ref: '#/definitions/Borrower'
  /ratings/users/{userId}:
      get:
        tags:
          - ratings
        summary: Gets all ratings by given user on tapes
        description: Gets all ratings by given user on tapes
        operationId: getUserRatings
        produces:
          - application/json
        parameters:
        - name: userId
          in: path
          description: Id of user viewing his or her ratings on all video tapes
          required: true
          type: integer
          format: int64
        responses:
          '200':
            description: successful operation
            schema:
              type: array
              items:
                $ref: '#/definitions/Rating'
          '400':
            description: invalid id supplied for user
          '404':
            description: user not found with id
  /ratings/users/{userId}/tapes/{tapeId}:
      get:
        tags:
          - ratings
        summary: Gets given user's rating for a specific tape
        description: Gets given user's rating for a specific tape
        operationId: getUserRatingByTapeId
        produces:
          - application/json
        parameters:
        - name: userId
          in: path
          description: Id of user viewing his or her rating on video tape
          required: true
          type: integer
          format: int64
        - name: tapeId
          in: path
          description: Id of video tape user is viewing his or her rating on
          required: true
          type: integer
          format: int64
        responses:
          '200':
            description: successful operation
            schema:
              $ref: '#/definitions/RatingInput'
          '400':
            description: invalid id supplied for video tape or user
          '404':
            description: video tape or user not found
      post:
        tags:
          - ratings
        summary: Add given user's rating for a specific tape
        description: Add given user's rating for a specific tape
        operationId: postUserRatingByTapeId
        produces:
          - application/json
        parameters:
        - name: userId
          in: path
          description: Id of user adding his or her rating on video tape
          required: true
          type: integer
          format: int64
        - name: tapeId
          in: path
          description: Id of video tape user is adding his or her rating on
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: Rating of given video tape for user
          required: true
          schema:
            $ref: '#/definitions/RatingInput'
        responses:
          '200':
            description: successful operation
          '400':
            description: invalid id supplied for video tape or user
          '404':
            description: video tape or user not found
      put:
        tags:
          - ratings
        summary: Update given user's rating for a specific tape
        description: Update given user's rating for a specific tape
        operationId: putUserRatingByTapeId
        produces:
          - application/json
        parameters:
        - name: userId
          in: path
          description: Id of user updating his or her rating on video tape
          required: true
          type: integer
          format: int64
        - name: tapeId
          in: path
          description: Id of video tape user is updating his or her rating on
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: Rating of given video tape for user
          required: true
          schema:
            $ref: '#/definitions/RatingInput'
        responses:
          '200':
            description: successful operation
          '400':
            description: invalid id supplied for video tape or user
          '404':
            description: user rating not found on video tape
      delete:
        tags:
          - ratings
        summary: Delete given user's rating for a specific tape
        description: Delete given user's rating for a specific tape
        operationId: deleteUserRatingByTapeId
        produces:
          - application/json
        parameters:
        - name: userId
          in: path
          description: Id of user deleting his or her rating on video tape
          required: true
          type: integer
          format: int64
        - name: tapeId
          in: path
          description: Id of video tape user is deleting his or her rating on
          required: true
          type: integer
          format: int64
        responses:
          '200':
            description: successful operation
          '400':
            description: invalid id supplied for video tape or user
          '404':
            description: user rating not found on video tape
  /recommendations/{userId}:
      get:
        tags:
          - recommendations
        summary: Gets real-time recommendation on a video tape for a given user
        description: Gets real-time recommendation on a video tape for a given user
        operationId: getUserRecommendation
        produces:
          - application/json
        parameters:
        - name: userId
          in: path
          description: Id of user requesting recommendation on a video tape
          required: true
          type: integer
          format: int64
        responses:
          '200':
            description: successful operation
            schema:
              type: array
              items:
                $ref: '#/definitions/Tape'
          '400':
            description: invalid id supplied for user
          '404':
            description: user not found with id
definitions:
  Friend:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      address:
        type: string
      email:
        type: string
      telephone:
        type: string
  FriendInput:
    type: object
    properties:
      name:
        type: string
      address:
        type: string
      email:
        type: string
      telephone:
        type: string
  Tape:
    type: object
    properties:
      id:
        type: integer
        format: int64
      title:
        type: string
      director:
        type: string
      type:
        type: string
      releaseDate:
        type: string
        format: date-time
      eidr:
        type: string
  TapeInput:
    type: object
    properties:
      title:
        type: string
      director:
        type: string
      type:
        type: string
      releaseDate:
        type: string
        format: date-time
      eidr:
        type: string
  BorrowRecord:
    type: object
    properties:
      borrowerId:
        type: integer
        format: int64
      tapeId:
        type: integer
        format: int64
      borrowDate:
        type: string
        format: date-time
  BorrowRecordInput:
    type: object
    properties:
      tapeId:
        type: integer
        format: int64
      borrowDate:
        type: string
        format: date-time
  BorrowedTapeDetails:
    type: object
    properties:
      tape:
        $ref: '#/definitions/Tape'
      borrowerId:
        type: integer
        format: int64
      borrowerName:
        type: string
      borrowDate:
        type: string
        format: date-time
  BorrowedTape:
    type: object
    properties:
      tapeId:
        type: integer
        format: int64
      tapeTitle:
        type: string
      borrowDate:
        type: string
        format: date-time
  Borrower:
    type: object
    properties:
      borrower:
        $ref: '#/definitions/Friend'
      tapes:
        type: array
        items:
          $ref: '#/definitions/BorrowedTape'
  Rating:
    type: object
    properties:
      userId:
        type: integer
        format: int64
      tapeId:
        type: integer
        format: int64
      rating:
        type: integer
        minimum: 1
        maximum: 5
  RatingInput:
    type: object
    properties:
      rating:
        type: integer
        minimum: 1
        maximum: 5
