swagger: "2.0"
info:
  description: "An extensive video tape rental system that manages users, video tapes and borrow records. Additionally the system provides functionality supporting user reviews and can provide personalized video tape recommendation."
  version: "1.0.0"
  title: "Videotapes Galore"
host: "127.0.0.1:8080"
basePath: "/api/v1"
tags:
- name: "tapes"
  description: "Everything related to tape information and management"
- name: "users"
  description: "User management and information, that includes tape rentals"
- name: "reviews"
  description: "Handles user reviews"
- name: "recommendation"
  description: "Recommendation service that computes recommendations based on user ratings"
schemes:
- "http"
paths:
  /tapes:
    get:
      tags:
      - "tapes"
      summary: "Gets information about all video tapes"
      description: "Returns all video tapes in the system. If the LoanDate query parameter is passed, all tapes that were on loan at that date are returned in a report"
      operationId: "getAllTapes"
      consumes: 
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "query"
        name: "LoanDate"
        required: false
        type: "string"
        format: "date"
      responses:
        200:
          description:
            "Returns all video tapes in system"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Tape"
        400:
          description: "LoanDate provided was improperly formatted"
    post:
      tags:
      - "tapes"
      summary: "Adds a new video tape to the system"
      description: ""
      operationId: "addNewTape"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Video tape object to add to system"
        required: true
        schema:
          $ref: "#/definitions/TapeInputModel"
      responses:
        201:
          description: "Video tape created"
        401:
          description: "Client unauthorized for request"
        412:
          description: "Input model improperly formatted"
  /tapes/{tapeId}:
    get:
      tags:
      - "tapes"
      summary: "Get information about a specific tape (including borrowing history)"
      description: ""
      operationId: "getTapeById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "tapeId"
        in: "path"
        description: "Id of video tape to update"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Returns details associated with video tape"
          schema:
              $ref: "#/definitions/TapeDetail"
        400:
          description: "Id improperly formatted"
        404:
          description: "Video tape not found"
    put:
      tags:
      - "tapes"
      summary: "Updates existing video tape"
      description: ""
      operationId: "updateTapeById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "tapeId"
        in: "path"
        description: "Id of video tape to update"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Video tape input model"
        required: true
        schema:
          $ref: "#/definitions/TapeInputModel"
      responses:
        204:
          description: "Video tape updated"
        400:
          description: "Id improperly formatted"
        404:
          description: "Video tape not found"
        401:
          description: "Client unauthorized for request"
        412:
          description: "Input model improperly formatted"
    delete:
      tags:
      - "tapes"
      summary: "Removes video tape from system by tape id"
      description: ""
      operationId: "deleteTapeById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "tapeId"
        in: "path"
        description: "Id of tape to remove"
        required: true
        type: "integer"
        format: "int64"
      responses:
        204:
          description: "Video tape removed"
        400:
          description: "Id improperly formatted"
        401:
          description: "Client unauthorized for request"
        404:
          description: "Video tape not found"
  /users:
    get:
      tags:
      - "users"
      summary: "Gets information on all users in the system"
      description: "Returns informaton on all users in the system. If LoanDate query parameter is provided all users that had a tape on loan at LoanDate is returned in a report. If the LoanDuration query parameter is provided, users that have had a tape on loan for that many days is returned in a report"
      operationId: "getAllUsers"
      produces:
      - "application/json"
      parameters:
      - in: "query"
        name: "LoanDate"
        required: false
        type: "string"
        format: "date"
      - in: "query"
        name: "LoanDuration"
        required: false
        type: "string"
        format: "date"
      responses:
        200:
          description: "Users returned successfully"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/User"
        400: 
          description: "LoanDate is not a valid date; LoanDuration is not a number"
        401:
          description: "Client unauthorized for request"
    post:
      tags:
      - "users"
      summary: "Adds a new user to the system"
      description: ""
      operationId: "addNewUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "User data"
        required: true
        schema:
          $ref: "#/definitions/UserInputModel"
      responses:
        201:
          description: "User created"
        401:
          description: "Client unauthorized for request"
        412:
          description: "Input model improperly formatted"
  /users/{userId}:
    get:
      tags:
      - "users"
      summary: "Gets a user by user id with borrow history"
      description: ""
      operationId: "getUserById"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "The id of the user to get information on"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "User information"
          schema:
            $ref: "#/definitions/UserBorrowRecord"
        400:
          description: "Id improperly formatted"
        401:
          description: "Client unauthorized for request"
        404: 
          description: "User not found"
    put:
      tags:
      - "users"
      summary: "Updates a user by id"
      description: ""
      operationId: "updateUserById"
      produces:
      - "application/json"
      consumes:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "The id of the user to update"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "User input model for updated user information"
        required: true
        schema:
          $ref: "#/definitions/UserInputModel"
      responses:
        204:
          description: "Update successful"
        400:
          description: "Id improperly formatted"
        404: 
          description: "User not found"
        401:
          description: "Client unauthorized for request"
        412:
          description: "Input model improperly formatted"
    delete:
      tags:
      - "users"
      summary: "Removes a user by id"
      description: ""
      operationId: "removeUserById"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "The id of the user to remove"
        required: true
        type: "integer"
        format: "int64"
      responses:
        204:
          description: "User deleted"
        400:
          description: "Id improperly formatted"
        401:
          description: "Client unauthorized for request"
        404:
          description: "User not found"
        
  /users/{userId}/tapes:
    get:
      tags:
      - "tapes"
      summary: "Get information on video tapes user has on loan"
      description: ""
      operationId: "getUserLoans"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "Id of user to get video tapes on loan for"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Returns video tapes on loan for user"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Tape"
        400:
          description: "Id improperly formatted"
        401:
          description: "Client unauthorized for request"
        404:
          description: "User not found"
  /users/{userId}/tapes/{tapeId}:
    post:
      tags:
      - "tapes"
      summary: "Assign video tape to user for loan"
      description: ""
      operationId: "loanTapeToUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "User id for borrower to assign tape to on loan"
        required: true
        type: "integer"
        format: "int64"
      - name: "tapeId"
        in: "path"
        description: "Video tape id assign to borrower on loan"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Input model for new borrow record"
        required: true
        schema:
          $ref: "#/definitions/BorrowRecordInputModel"
      responses:
        201:
          description: "Borrow record created"
        400:
          description: "Id of video tape or user improperly formatted"
        404:
          description: "User or video tape not found"
        401:
          description: "Client unauthorized for request"
        412:
          description: "Input model improperly formatted"
    put:
      tags:
      - "tapes"
      summary: "Updates borrowing information"
      description: ""
      consumes:
      - "applications/json"
      produces:
      - "applications/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "Id of user to update borrowing information for"
        required: true
        type: "integer"
        format: "int64"
      - name: "tapeId"
        in: "path"
        description: "Id of tape to update borrowing information for"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Borrow record input model to update borrow record in system"
        required: true
        schema:
          $ref: "#/definitions/BorrowRecordInputModel"
      responses:
        204:
          description: "Borrow record updated"
        400:
          description: "Id of user or video tape improperly formatted"
        404: 
          description: "User or tape not found"
        401:
          description: "Client unauthorized for request"
        412:
          description: "Input model improperly formatted"
    delete:
      tags:
      - "tapes"
      summary: "Deletes borrow record from system"
      description: ""
      produces:
      - "applications/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "Id of user to update borrowing information for"
        required: true
        type: "integer"
        format: "int64"
      - name: "tapeId"
        in: "path"
        description: "Id of tape to update borrowing information for"
        required: true
        type: "integer"
        format: "int64"
      responses:
        204:
          description: "Borrow record removed"
        400:
          description: "Id of user or video tape not correctly formatted"
        401:
          description: "Client unauthorized for request"
        412:
          description: "Input model improperly formatted"
  /users/{userId}/reviews:
    get:
      tags:
      - "reviews"
      summary: "Gets all reviews for user"
      description: ""
      operationId: "getAllUserReviewsById"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "Id of user to get reviews for"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Returns user reviews"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Review"
        400:
          description: "Id improperly formatted"
        401:
          description: "Client unauthorized for request"
        404: 
          description: "User not found"
  /users/{userId}/reviews/{tapeId}:
    get:
      tags:
      - "reviews"
      summary: "Gets user reviews for a tape"
      description: ""
      operationId: "getUserReviewForTape"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "Id of User to get reviews for"
        required: true
        type: "integer"
        format: "int64"
      - name: "tapeId"
        in: "path"
        description: "Id of video tape to get reviews for"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Returns user review for tape"
          schema:
            $ref: "#/definitions/Review"
        400:
          description: "Id improperly formatted"
        401:
          description: "Client unauthorized for request"
    post:
      tags:
      - "reviews"
      summary: "Adds new user review for tape"
      description: ""
      operationId: "createReview"
      produces:
      - "application/json"
      consumes:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "Id of user reviewing tape"
        required: true
        type: "integer"
        format: "int64"
      - name: "tapeId"
        in: "path"
        description: "Id of tape being reviewed"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Input model for the review"
        required: true
        schema:
          $ref: "#/definitions/ReviewInputModel"
        
      responses:
        201:
          description: "Review created succesfully"
        400:
          description: "Id improperly formatted"
        401:
          description: "Client unauthorized for request"
        412:
          description: "Input model improperly formatted"
        404:
          description: "User or video tape not found"
    put:
      tags:
      - "reviews"
      summary: "Updates user review for video tape"
      description: ""
      operationId: "updateReview"
      produces:
      - "application/json"
      consumes:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "Id of user to update review for"
        required: true
        type: "integer"
        format: "int64"
      - name: "tapeId"
        in: "path"
        description: "Id of video tape to update review for"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Input model to update review with"
        required: true
        schema:
          $ref: "#/definitions/ReviewInputModel"
      responses:
        204:
          description: "Review updated"
        400:
          description: "Id improperly formatted"
        401:
          description: "Client unauthorized for request"
        412:
          description: "Input model improperly formatted"
        404:
          description: "User or tape not found"
    delete:
      tags:
      - "reviews"
      summary: "Deletes review by user for tape"
      description: ""
      operationId: "removeReview"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "Id of user to remove review for"
        required: true
        type: "integer"
        format: "int64"
      - name: "tapeId"
        in: "path"
        description: "Id of tape to remove review for"
        required: true
        type: "integer"
        format: "int64"
      responses:
        204:
          description: "Review removed"
        400:
          description: "Id improperly formatted"
        401:
          description: "Client unauthorized for request"
        412:
          description: "Input model improperly formatted"
        404:
          description: "User or video tape not found"
  /users/{userId}/recommendation:
    get:
      tags:
      - "recommendation"
      summary: "Gets recommendation for user"
      description: ""
      operationId: "getRecommendation"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "Id of user to get recommendation for"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Returns recommendation for user"
          schema:
            $ref: "#/definitions/Tape"
        400:
          description: "Id improperly formatted"
        401:
          description: "Client unauthorized for request"
        404:
          description: "User not found"
        
  /tapes/reviews:
    get:
      tags:
      - "reviews"
      summary: "Gets all reviews in system"
      description: ""
      operationId: "getAllReviews"
      produces:
      - "application/json"
      responses:
        200:
          description: "Returns all reviews"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Review"
  /tapes/{tapeId}/reviews:
    get:
      tags:
      - "reviews"
      summary: "Gets all reviews for a tape"
      description: ""
      operationId: "getAllReviewsForTape"
      produces:
      - "application/json"
      parameters:
      - name: "tapeId"
        in: "path"
        description: "Id of tape to get reviews for"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Returns reviews for tape"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Review"
        400:
          description: "Id improperly formatted"
        401:
          description: "Client unauthorized for request"
        404:
          description: "Video tape not found"
  /tapes/{tapeId}/reviews/{userId}:
    get:
      tags:
      - "reviews"
      summary: "Gets users review for tape"
      description: ""
      operationId: "getUserTapeReview"
      produces:
      - "application/json"
      parameters:
      - name: "tapeId"
        in: "path"
        description: "Id of tape to get review for"
        required: true
        type: "integer"
        format: "int64"
      - name: "userId"
        in: "path"
        description: "Id of user to get review from"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Returns user review for tape"
          schema:
            $ref: "#/definitions/Review"
        400:
          description: "Id improperly formatted"
        401:
          description: "Client unauthorized for request"
        404: 
          description: "User or video tape not found"
    put:
      tags:
      - "reviews"
      summary: "Updates user review"
      description: ""
      produces:
      - "application/json"
      consumes:
      - "application/json"
      parameters:
      - name: "tapeId"
        in: "path"
        description: "Id of tape to update review for"
        required: true
        type: "integer"
        format: "int64"
      - name: "userId"
        in: "path"
        description: "Id of user to update review for"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Input model to update user review"
        required: true
        schema:
          $ref: "#/definitions/ReviewInputModel"
      responses:
        204:
          description: "Review updated"
        400:
          description: "Id improperly formatted"
        401:
          description: "Client unauthorized for request"
        404:
          description: "User or video tape not found"
    delete:
      tags:
      - "reviews"
      summary: "Deletes user review"
      description: ""
      produces:
      - "application/json"
      consumes:
      - "application/json"
      parameters:
      - name: "tapeId"
        in: "path"
        description: "Id of tape to remove review from"
        required: true
        type: "integer"
        format: "int64"
      - name: "userId"
        in: "path"
        description: "Id of user to remove review for"
        required: true
        type: "integer"
        format: "int64"
      responses:
        204:
          description: "Review deleted"
        400:
          description: "Id improperly formatted"
        401:
          description: "Client unauthorized for request"
        404:
          description: "User or video tape not found"
definitions:
  Tape:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      title:
        type: "string"
      director:
        type: "string"
      type:
        type: "string"
        enum: ["VHS", "Betamax"]
      releaseDate:
        type: "string"
        format: "date"
      eidr:
        type: "string"
  TapeDetail:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      title:
        type: "string"
      director:
        type: "string"
      type:
        type: "string"
        enum: ["VHS", "Betamax"]
      releaseDate:
        type: "string"
        format: "date"
      eidr:
        type: "string"
      history:
        type: "array"
        items:
          $ref: "#/definitions/BorrowRecord"
  TapeInputModel:
    type: "object"
    properties:
      title:
        type: "string"
      director:
        type: "string"
      type:
        type: "string"
        enum: ["VHS", "Betamax"]
      releaseDate:
        type: "string"
        format: "date"
      eidr:
        type: "string"
  TapeBorrowRecord:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      title:
        type: "string"
      director:
        type: "string"
      type:
        type: "string"
        enum: ["VHS", "Betamax"]
      releaseDate:
        type: "string"
        format: "date"
      eidr:
        type: "string"
      borrowDate:
        type: "string"
        format: "date"
      returnDate:
        type: "string"
        format: "date"
      user:
        $ref: "#/definitions/User"
  BorrowRecord:
    type: "object"
    properties:
      id: 
        type: "integer"
        format: "int64"
      userId:
        type: "integer"
        format: "int64"
      tapeId: 
        type: "integer"
        format: "int64"
      borrowDate:
        type: "string"
        format: "date"
      returnDate:
        type: "string"
        format: "date"
  BorrowRecordDetails:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      title:
        type: "string"
      director:
        type: "string"
      type:
        type: "string"
        enum: ["VHS", "Betamax"]
      releaseDate:
        type: "string"
        format: "date"
      eidr:
        type: "string"
      borrowDate: 
        type: "string"
        format: "date"
      returnDate:
        type: "string"
        format: "date"
      
  BorrowRecordInputModel:
    type: "object"
    properties:
      borrowDate:
        type: "string"
        format: "date"
      returnDate:
        type: "string"
        format: "date"
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      email:
        type: "string"
        format: "email"
      phone:
        type: "string"
        maxLength: 12
      address:
        type: "string"
  UserBorrowRecord:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      email:
        type: "string"
        format: "email"
      phone:
        type: "string"
        maxLength: 12
      address:
        type: "string"
      history:
        type: "array"
        items: 
          $ref: "#/definitions/BorrowRecord"
  UserTapes:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      email:
        type: "string"
        format: "email"
      phone:
        type: "string"
        maxLength: 12
      address:
        type: "string"
      tapes:
        type: "array"
        items:
          $ref: "#/definitions/BorrowRecordDetails"
  UserInputModel:
    type: "object"
    properties:
      name:
        type: "string"
      email:
        type: "string"
        format: "email"
      phone:
        type: "string"
        maxLength: 12
      address:
        type: "string"
  Review:
    type: "object"
    properties:
      id: 
        type: "integer"
        format: "int64"
      userId:
        type: "integer"
        format: "int64"
      tapeId:
        type: "integer"
        format: "int64"
      rating:
        type: "integer"
        minimum: 1
        maximum: 5
  ReviewInputModel:
    type: "object"
    properties:
      rating:
        type: "integer"
        minimum: 1
        maximum: 5